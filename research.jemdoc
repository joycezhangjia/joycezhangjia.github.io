# jemdoc: menu{MENU}{research.html}, nofooter
==Jia Zhang - Research
~~~
== Research Interest
- Routing Security

- Mobile Web Services

- Transport Layer Performance Measurement and Improvement\n

== Publications
- (ICNP'25) Shaorui Ren, *Jia Zhang*, [https://tsinghuadong.github.io/ Enhuan Dong], [http://routing.netlab.edu.cn/tiki-index.php?page=Mingwei+Xu/ Mingwei Xu], Yixuan Zhang, [https://caojh15.github.io/ Jiahao Cao], Jianping Wu,
Undermining Delay-based QUIC Congestion Control: A Receiver-driven Attack via Crafted Host Delays, ICNP 2025.
- (CCS'25) Andong Chen, Yangyang Wang, *Jia Zhang*, [http://routing.netlab.edu.cn/tiki-index.php?page=Mingwei+Xu/ Mingwei Xu],
Right the Ship: Assessing the Legitimacy of Invalid Routes in RPKI, CCS 2025.
- (ISCC'24) [https://www.surrey.ac.uk/people/peng-qian/ Peng Qian], [https://www.surrey.ac.uk/people/ning-wang/ Ning Wang], Foh Chuan Heng, *Jia Zhang*, Carl Udora, Rahim Tafazolli,
Enabling eBPF-Based Packet Duplication for Robust Volumetric Video Streaming, IEEE ISCC 2024. ([ebpf_iscc24.pdf paper])
- (WWW'24) *Jia Zhang*, Haitian Tong, [https://tsinghuadong.github.io/ Enhuan Dong], Xin Qian, [http://routing.netlab.edu.cn/tiki-index.php?page=Mingwei+Xu/ Mingwei Xu], Xiaotian Li, [https://zilimeng.com/index.html/ Zili Meng],
Cold Start or Hot Start? Robust Slow Start in Congestion Control with A Priori Knowledge for Mobile Web Services, TheWebConf 2024. ([wisestart_www24.pdf paper])
- (ATC'23) *Jia Zhang*, Yixuan Zhang, [https://tsinghuadong.github.io/ Enhuan Dong], Yan Zhang, Shaorui Ren, [https://zilimeng.com/index.html/ Zili Meng], [http://routing.netlab.edu.cn/tiki-index.php?page=Mingwei+Xu/ Mingwei Xu], Xiaotian Li, Zongzhi Hou, Zhicheng Yang, [http://www.net.informatik.uni-goettingen.de/?q=people/prof-dr-xiaoming-fu/ Xiaoming Fu],
Bridging the Gap between QoE and QoS in Congestion Control: A Large-scale Mobile Web Service Perspective, USENIX ATC 2023, Boston, MA, USA. ([Floo_atc23.pdf paper])
- (ToN'23) *Jia Zhang*, Shaorui Ren, [https://tsinghuadong.github.io/ Enhuan Dong], [https://zilimeng.com/index.html/ Zili Meng], [http://routing.netlab.edu.cn/tiki-index.php?page=Yuan+Yang/ Yuan Yang], [http://routing.netlab.edu.cn/tiki-index.php?page=Mingwei+Xu/ Mingwei Xu], [https://github.com/iyangsj/ Sijie Yang], Miao Zhang Yang Yue. Reducing Mobile Web Latency through Adaptively Selecting Transport Protocol, IEEE/ACM Transactions on Networking (ToN), 2023. ([wisetrans-ton23 paper])
- (WWW'21) *Jia Zhang*, [http://routing.netlab.edu.cn/tiki-index.php?page=Enhuan+Dong/ Enhuan Dong], [https://zilimeng.com/index.html/ Zili Meng], [http://routing.netlab.edu.cn/tiki-index.php?page=Yuan+Yang/ Yuan Yang], [http://routing.netlab.edu.cn/tiki-index.php?page=Mingwei+Xu/ Mingwei Xu], [https://github.com/iyangsj/ Sijie Yang], Miao Zhang Yang Yue. WiseTrans: Adaptive Transport Protocol Selection for Mobile Web Service, TheWebConf 2021. ([WiseTrans_www21.pdf paper])
- (ToN’21) [https://zilimeng.com/index.html/ Zili Meng], Yaning Guo, [https://www.linkedin.com/in/%E9%80%B8%E6%98%95-%E6%B2%88-59a195175/ Yixin Shen], [http://routing.netlab.edu.cn/tiki-index.php?page=Jing+Chen/ Jing Chen], [https://www.linkedin.com/in/chao-zhou-91749769// Chao Zhou], [http://routing.netlab.edu.cn/tiki-index.php?page=Minhu+Wang/ Minhu Wang], *Jia Zhang*, [http://routing.netlab.edu.cn/tiki-index.php?page=Mingwei+Xu/ Mingwei Xu], [https://chensun-me.github.io/ Chen Sun], [http://people.cs.clemson.edu/~hongxih/ Hongxin Hu],
Practically Deploying Heavyweight Adaptive Bitrate Algorithms With Teacher-Student Learning,
IEEE/ACM Transactions on Networking (ToN), 2021. ([https://zilimeng.com/papers/pitree-ton21.pdf paper])([https://transys.io/pitree website]) 
- (SIGIR’17) [https://www.microsoft.com/en-us/research/people/fangzwu/ Fangzhao Wu], *Jia Zhang*, Zhigang Yuan, Sixing Wu, [http://thungnlab.cn/members/yongfeng-huang.html Yongfeng Huang], and Jun Yan.2017. Sentence-level sentiment classification with weak supervision. In Proceedings of the 40thInternational ACM SIGIR
\n

== Research Experience
=== Undermining Delay-based QUIC Congestion Control: A Receiver-driven Attack via Crafted Host Delays (ICNP'25)
QUIC gains significant attention due to its superior transmission performance, achieving widespread adoption in both academia and industry. To improve round-trip time (RTT) estimation, QUIC introduces the Host Delay field, enabling senders to exclude receiver-induced delays. Many delay-based congestion control algorithms (CCAs) rely on these RTT estimates to detect congestion and regulate sending rates. However, we find that malicious Host Delay values can distort RTT measurements, causing inappropriate rate adjustments by CCAs.\n
In this paper, we investigate a new class of attacks leveraging maliciously crafted Host Delay values. To our knowledge, we are the first to analyze the vulnerability of Host Delay and present QUDIT, a universal receiver-driven attack targeting delay-based QUIC CCAs. Unlike prior attacks that presume full network queuing delays visibility and undetected injection capabilities, our attacker model only grants the adversary access as a standard QUIC receiver with limited knowledge of bottleneck conditions. We minimally modify the QUIC receiver to infer bottleneck queuing behavior in real time. Based on these inferences, we design dynamic Host Delay crafting strategies tailored to the specific behavior of various delay-based CCAs and accounting for random network fluctuations. Our attack prompts the sender to overshoot its rate, leading to excessive bandwidth consumption at the bottleneck and degradation of competing flows. Results demonstrate the throughput degradation of victim flow achieves up to 60% within 0.3 s and amplification gains between 200× and 600×. We propose defenses mitigating QUDIT, with vulnerabilities reported to IETF and QUIC maintainers.\n
=== Right the Ship: Assessing the Legitimacy of Invalid Routes in RPKI (CCS'25)
Resource Public Key Infrastructure (RPKI) aims to prevent prefix hijacking by providing secure mappings between IP prefixes and their authorized origin Autonomous Systems (ASes). In recent years, there has been notable growth in the deployment of RPKI and Route Origin Validation (ROV). Nonetheless, over 40\% of the routes in the global routing table still lack the protection of RPKI. One of the critical reasons some networks are reluctant to deploy RPKI is the concern that some ROV-invalid routes may be legitimate, and filtering these routes will harm network service quality, especially affecting network connectivity.\n
In this work, we perform a comprehensive measurement study to assess the legitimacy of ROV-invalid routes in RPKI. We evaluate the impact of filtering all ROV-invalid routes in the global routing table, presenting a view that some ROV-invalid routes are not illegitimate, defined as harmlessly ROV-invalid (h-invalid). We propose five characteristics and design a characteristics-based methodology for identifying h-invalid routes. Based on the methodology, we analyze the magnitude of h-invalid routes present on the Internet each day, revealing that over 91\% of ROV-invalid results are h-invalid. Furthermore, we conclude three main reasons for h-invalid routes. Finally, with all our findings, we provide practical recommendations for network operators to help promote RPKI deployment.\n 
=== Cold Start or Hot Start? Robust Slow Start in Congestion Control with A Priori Knowledge for Mobile Web Services (WWW'24)
Mobile web services value a quick loading of contents in the first page, which is quantified by the above-the-fold time of the first page (first AFT) and is likely to fall into the slow start phase in congestion control. However, the widely deployed slow start mechanism is ``cold start'', which manually hardcodes the parameters and is not suitable for the first AFT of heterogeneous mobile web services. We revisit the slow start mechanism and find that it could be optimized with a priori knowledge. However, blindly relying on a priori knowledge is not robust enough to handle the fluctuating mobile networks and unpredictable application traffic.  In this paper, we propose WiseStart, a ``hot-start-based'' slow start mechanism. WiseStart utilizes the priori knowledge to set the initial parameters, continuously probes the new connection to handle the fluctuating network conditions, and carefully adapts to the application-limit scenarios. We implement WiseStart in a popular mobile web service online in production. Comprehensive experiments demonstrate that WiseStart reduces the First AFT by 25.43\% and the average RCT at connection establishment by 16.15\% compared to the default slow start mechanism and other state-of-the-art baselines.\n
=== Bridging the Gap between QoE and QoS in Congestion Control: A Large-scale Mobile Web Service Perspective (ATC'23)
To improve the user experience of mobile web services, various congestion control algorithms (CCAs) have been proposed, yet the performance of the application is still unsatisfactory. We argue that the suboptimal performance comes from the gap between what the application needs (i.e., Quality of Experience (QoE)) and what the current CCA is optimizing (i.e., Quality of Service (QoS)). However, optimizing QoE for CCAs is extremely challenging due to the convoluted relationship and mismatched timescale between QoE and QoS. To bridge the gap between QoE and QoS for CCAs, we propose Floo, a new QoE-oriented congestion control selection mechanism, as a shim layer between CCAs and applications to address the challenges above. Floo targets request completion time as QoE, and conveys the optimization goal of QoE to CCAs by always selecting the most appropriate CCA in the runtime. Floo further adopts reinforcement learning to capture the complexity in CCA selection and supports smooth CCA switching during transmission. We implement Floo in a popular mobile web service application online. Through extensive experiments in production environments and on various locally emulated network conditions, we demonstrate that Floo improves QoE by about 14.3% on average.\n
=== Reducing Mobile Web Latency Through Adaptively Selecting Transport Protocol (ToN'23)
To improve the performance of mobile web services, a new transport protocol, QUIC, has been recently proposed as a substitute for TCP. However, with pros and cons of QUIC, it is challenging to decide whether and when to use QUIC in large-scale real-world mobile web services. Complex temporal correlation of network conditions, high user heterogeneity in a nationwide deployment, implementation diversity of QUIC variants limited, and resources on mobile devices all affect the selection of transport protocols. In this paper, we present WiseTrans, an adaptive transport protocol selection mechanism, to switch transport protocols for mobile web services online and improve the completion time of web requests. WiseTrans introduces machine learning techniques to deal with temporal heterogeneity, makes decisions with historical information to handle spatial heterogeneity, adopts an online learning method to keep pace with implementation variation, and switches transport protocols at the request level to reach high performance with acceptable overhead. We implement WiseTrans on two platforms (Android and iOS) in a popular mobile web service application of Baidu. Comprehensive experiments demonstrate that WiseTrans can reduce request completion time by up to 25.8% on average compared to the usage of a single protocol.\n
=== WiseTrans: Adaptive Transport Protocol Selection for Mobile Web Service (WWW'21)
To improve the performance of mobile web service, a new transport protocol, QUIC, has been recently proposed. However, for large-scale real-world deployments, deciding whether and when to use QUIC in mobile web service is challenging. Complex temporal correlation of network conditions, high spatial heterogeneity of users in a nationwide deployment, and limited resources on mobile devices all affect the selection of transport protocols. In this paper, we present WiseTrans to adaptively switch transport protocols for mobile web service online and improve the completion time of web requests.\n
WiseTrans introduces machine learning techniques to deal with temporal heterogeneity, makes decisions with historical information to handle spatial heterogeneity, and switches transport protocols at the request level to reach both high performance and acceptable overhead. We implement WiseTrans on two platforms (Android and iOS) in a popular mobile web service application of Baidu. Comprehensive experiments demonstrate that WiseTrans can reduce request completion time by up to 26.5% on average compared to the usage of a single protocol.\n
=== Practically Deploying Heavyweight Adaptive Bitrate Algorithms With Teacher-Student Learning (ToN'21)
Major commercial client-side video players employ adaptive bitrate (ABR) algorithms to improve the user quality of experience (QoE). With the evolvement of ABR algorithms, increasingly complex methods such as neural networks have been adopted to pursue better performance. However, these complex methods are too heavyweight to be directly deployed in client devices with limited resources, such as mobile phones. Existing solutions suffer from a trade-off between algorithm performance and deployment overhead. To make the deployment of sophisticated ABR algorithms practical, we propose PiTree, a general, high-performance, and scalable framework that can faithfully convert sophisticated ABR algorithms into decision trees with teacher-student learning. In this way, network operators can train complex models offline and deploy converted lightweight decision trees online. We also present theoretical analysis on the conversion and provide two upper bounds of the prediction error during the conversion and the generalization loss after conversion. Evaluation on three representative ABR algorithms with both trace-driven emulation and real-world experiments demonstrates that PiTree could convert ABR algorithms into decision trees with <3% average performance degradation. Moreover, compared to original deployment solutions, PiTree could save considerable operating expenses for content providers.
=== Sentence-level Sentiment Classification with Weak Supervision (SIGIR'17)
Sentence-level sentiment classification is important to understand users' fine-grained opinions. Existing methods for sentence-level sentiment classification are mainly based on supervised learning. However, it is difficult to obtain sentiment labels of sentences since manual annotation is expensive and time-consuming. In this paper, we propose an approach for sentence-level sentiment classification without the need of sentence labels. More specifically, we propose a unified framework to incorporate two types of weak supervision, i.e., document-level and word-level sentiment labels, to learn the sentence-level sentiment classifier. In addition, the contextual information of sentences and words extracted from unlabeled sentences is incorporated into our approach to enhance the learning of sentiment classifier. Experiments on benchmark datasets show that our approach can effectively improve the performance of sentence-level sentiment classification.
